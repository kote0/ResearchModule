@using ResearchModule.Components.Models
@model PageInfo
@if (Model == null)
{
    return;
}
@{

    var totalPages = Model.TotalPages < 5 ? Model.TotalPages : 5;
    var havePrevious = Model.PageNumber != 1;
    var haveNext = Model.TotalPages != totalPages;
    var type = Html.Raw("type: 'POST',");
    var data = string.IsNullOrEmpty(Model.DataId) ? null : Html.Raw(string.Concat(type, " data:  $('#", Model.DataId, "').find('input, select'),"));

}
<div class="row">
    <div class="col-md-12">
        <div class="btn-group">
            <button type="button" onclick="loadPageInfoResult(@(havePrevious ? Model.PageNumber - 1 : -1))" aria-label="Previous" class="btn btn-default" disabled="@(havePrevious ? false : true)">
                <span aria-hidden="true">&laquo;</span>
            </button>
            @for (var i = Model.PageNumber == 1 ? 1 : Model.PageNumber - 1; i <= totalPages; i++)
            {
                <button type="button" onclick="loadPageInfoResult(@(i))" class="btn btn-default">@i</button>
            }
            <button type="button" onclick="loadPageInfoResult(@(haveNext ? Model.PageNumber + 1 : -1))" aria-label="Next" class="btn btn-default" disabled="@(haveNext ? false : true)">
                <span aria-hidden="true">&raquo;</span>
            </button>
        </div>
    </div>
</div>
<script type="text/javascript">
    function loadPageInfoResult(numberPage) {

        if (numberPage == -1) {
            return;
        }
        $.ajax({
            url: '@(Model.GetUrl())' + numberPage,
            @(data ?? type)
            success: function (data) {
                $("#pageInfoResult").html(data);
            }
        });

    }

</script>