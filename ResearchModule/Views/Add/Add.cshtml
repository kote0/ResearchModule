@using ResearchModule.Components
@using ResearchModule.Components.Models.Card
@using Microsoft.AspNetCore.Html
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var AuthorsModal = "AuthorsModal";
}

<style>
    td.author_Remove {
        text-align: center;
    }
</style>

@using (Html.BeginForm("CreatePublication", "Add", FormMethod.Post, new { id = "Add" }))
{
    <div style="margin-top: 30px;">
        @Html.Card("Name").Row(
              (Card r) =>
              {
              r.For()
                  .Content("Название публикации").Size(4)
                  .Row(Html.TextBox("PublicationName", "", new { @class = "form-control" })).Size(8);
              r.For()
                  .Content(Html.CheckBox("IsTranslate", false, new { onClick = "clickIsTarslate(this)" })).Size(12)
                  .Content(" Иностранный язык");
              r.For().Class("Translate");
              r.For()
                  .Content("Раздел").Size(4)
                  .Row().Id("load_select-Section").Size(8);
              r.For()
                  .Content("Вид публикации").Size(4)
                  .Row(Html.Button("CreateTP", "", Html.Icon("plus"), new { type = "button", onClick = "TypePublications.create()" })).Size(1)
                  .Row().Id("load_select-TypePublication").Size(7);
              r.For().Class("CreateTypePublication");
              r.For()
                  .Content("Форма работы").Size(4)
                  .Row(Html.Button("CreateFW", "", Html.Icon("plus"), new { type = "button", onClick = "FormWorks.create()" })).Size(1)
                  .Row().Id("load_select-FormWork").Size(7);
              r.For().IsRow(false).Class("CreateFormWork");
              r.For()
                  .Content("Автор").Size(4)
                  .Row(Html.Button("CreateAuthors", " Создать", Html.Icon("plus"), new { onClick = "Author.append()", type = "button" })).Size(2)
                  .Row(Html.Button("SearchAuthors", " Найти", Html.Icon("search"),
                      new Dictionary<string, object> { { "type", "button" }, { "data-toggle", "modal" }, { "data-target", "#Search" + AuthorsModal } })).Size(4);
              r.For().Class("SelectedAuthors").Content("");
              r.For().IsRow(false).Content(Html.Partial("CreateListOfAuthors")).Size("col");
                  r.For().Content("  TODO: Добавьте файл");
                  r.For()
                        .Content(Html.Button("Create", "Сохранить", null, new { type = "button", @class = "btn btn-success", onClick = "formSubmit()" }));
                  r.For().Class("AdditionalMainCard");
                  return r;
              }
          ).Render()
    </div>
}
@Html.Partial("SearchAuthorModal")


@{
    IHtmlContent Render<T>(Func<T, IHtmlContent> helper, T item = default(T)) =>
    helper(item);

    Func<object, IHtmlContent> CustomCreate(IHtmlContent click, string name, IHtmlContent value) =>
        (@<text>
        <div class="col-md-1">@click</div>
        <div class="col-md-4" style="margin-top: 5px">@name</div>
        <div class="col-md-7">@value</div>
        </text>);
}


<script type="text/javascript">
    $(document).ready(function () {
        loaderSelect("Section");
        loaderSelect("TypePublication");
        loaderSelect("FormWork");
    });

    function loaderSelect(type_name) {
        $.ajax({
                type: 'POST',
                url: '@Url.Action("LoadSelect", "Add")' + type_name,
                success: function (data) {
                    $("#load_select-" + type_name).html(data);
                }
       });

    }

    function formSubmit() {
        //$(".AdditionalSearchAuthorsModal").replaceWith(""); 
        var searchResult = $("#searchResult").find("[type=hidden], input:checked");
        var createResult = $("#createResult").find("input");
        convertName(searchResult);
        convertName(createResult);
        debugger;
        $("#Add").submit();
    }


    //конвертирование листа на корректные номера
    function convertName(list) {
        let countItem = -1;
        let id;
        for (var item of list) {
            let name = item.name.match(/\d/g)[0];
            if (id != name) {
                id = name;
                countItem++;
            }
            $("[name='" + item.name + "']").attr("name", item.name.replace(/\d/g, countItem));

        }
    }

    TypePublications = function () {
        let name = "TypePublication";
        return {
            create: function () {
                let val =
                `@Render(CustomCreate(
                    Html.Button("Delete", "", Html.Icon("remove"), new { type = "button", onClick = "TypePublications.remove()" }),
                    "Название вида",
                    Html.TextBox("TypePublicationName", "", new { @class = "form-control" })
                ))`;
                $(".CreateTypePublication").html(val);
                disable(".selectpicker_" + name + "Id", true);
                //$("._TypePublicationId button").prop("disabled", true);
            },
            remove: function () {
                $(".CreateTypePublication").empty();
                disable(".selectpicker_" + name + "Id", false);
                //$("._TypePublicationId button").prop("disabled", false);
            }
        };
    }();

    FormWorks = function () {
        let name = "FormWork";
        return {
            create: function () {
                let val =
                    `@Render(CustomCreate(
                    Html.Button("Delete", "", Html.Icon("remove"), new { type = "button", onClick = "FormWorks.remove()" }),
                    "Название формы работы",
                    Html.TextBox("FormName", "", new { @class = "form-control", placeholder = "Печатная" })
                ))`;
                $(".CreateFormWork").html("<div class='row'>" + val + "</div>");

                val =
                    `@Render(CustomCreate(
                    null,
                    "Сокращенное название",
                    Html.TextBox("ShortName", "", new { @class = "form-control", placeholder = "Печ" })
                ))`;
                $(".CreateFormWork").append("<div class='row'>" + val + "</div>");
                disable(".selectpicker_" + name + "Id", true);
                //$("._FormWorkId button").prop("disabled", true);
            },
            remove: function () {
                empty(".CreateFormWork"); disable(".selectpicker_" + name + "Id", false);
                //$("._FormWorkId button").prop("disabled", false);
            }
        };
    }();

    function clickIsTarslate(e) {
        let text = "<div class='col-md-4'>Перевод названия</div>";
        let value = '<div class="col-md-8">@Html.TextBox("TranslateText", "", new{@class = "form-control" })</div>';
        if (e.checked) {
            $(".Translate").append(text).append(value);
        }
        else {
            empty(".Translate");

        }
    }


    var timers = timers || [];
    timers[0] = 0;
    Author = function () {
        var resultauthorJson = [];
        var countAuthor = 0;
        let c = 0;
        return {
            append: function () {
                $.ajax({
                type: 'POST',
                url: '@Url.Action("Add", "Author")?id=' + countAuthor,
                success: function (data) {
                    countAuthor++;
                    $("#createResult").append(data);
                }
                });
            },
            remove: function (cardName) {
                let cardId = "[id$='" + cardName + "']";
                $(cardId).detach();
            },
            search: function (elem) {
                return {
                    onKeyUp: function () {
                        if (elem.value === "") return;
                        clearTimeout(timers[0]);
                        Author.search(elem).start();
                    },
                    start: function () {
                        timers[0] = setTimeout(function () { Author.search(elem).onChange() }, 500);
                    },
                    onChange: function () {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Search", "Author")?character=' + elem.value,
                            success: function (data) {
                                $(".AdditionalSearchAuthorsModal").html(data);
                            }
                        });
                    }
                }
            },
            searchResult: function () {
                return {
                    append: function (elem, id) {
                        let selector = "#AuthorItem_" + id;
                        if (elem.checked) {
                            let tr = $(selector).clone();
                            $(".SearchResultSearchAuthorsModal").append(tr);
                        }
                        else {
                            let checkBoxs = $("[name='Search[" + id + "].Selected'");
                            let firstCheckBox = checkBoxs[0];
                            if (firstCheckBox != undefined) {
                                firstCheckBox.checked = false;
                            }
                            let secondCheckBox = checkBoxs[2];
                            if (secondCheckBox != undefined) {
                                secondCheckBox.checked = false;
                            }
                            $(".SearchResultSearchAuthorsModal " + selector).detach();
                            $("#searchResult " + selector).detach();
                        }
                    },
                    serialize: function () {
                        debugger;
                        var searchResult = $("#searchResult").html($("#tbodySearchResult tr").clone());
                        searchResult.find("tr:has(td)").append(`<td>@Html.TextBox("Author[00].Weight", "", new { @class="form-control", placeHolder = "Вес" })</td>`);
                        //searchResult.find("tr:has(th)").append("<th>Вес*</th>")
                        
                        //resultauthorJson = site.tableToJson(document.getElementById("SearchResult"));
                        //$("#countResult > *").html("Добавленo: " + (resultauthorJson.length + c) + " автор(а)(ов)");
                    }
                }
            }
        };
    }();


</script>
