@using ResearchModule.Components
@inject ResearchModule.Service.PublicationService PublicationService
@using ResearchModule.Service
@model ResearchModule.ViewModels.PublicationsViewModel

<div>
    <button type="button" class="btn btn-default">Добавить</button>
</div>

@if (Model.Publications == null)
{
    <div>
        <p>Публикации отсутствуют...</p>
    </div>
    return;
}
@{
    Func<int, string> pageUrl = x => Url.Action("Publications", new { first = x });
}
<div class="btn-group">
    <paging page-info="Model.PageInfo" page-url="pageUrl"></paging>
</div>
@foreach (var item in Model.Publications)
{
    var publication = item.Publication;
    <div class="row">
        <div class="col-md-9">
            <h3># @publication.PublicationName</h3>
            <div class="viewAurhors">@item.Authors.ToStringThroughComma()</div>
            <div>@publication.OutputData</div>
        </div>
        <div class="col-md-2 right">
            <div class="toolbar">
                <a href="@Url.Action("Edit", "Publication",  new { id = publication.Id })" data-toggle="tooltip" title="Редактировать">@Html.Icon("pencil")</a>
                <a href="@Url.Action("Edit", "Publication",  new { id = publication.Id })" data-toggle="tooltip" title="Редактировать">@Html.Icon("remove")</a>
            </div>
            <div class="dater">
                <div>@publication.ModifyDate.Date</div>
                <div>Дата изменения</div>
            </div>
        </div>
    </div>
}

<style>
    .viewAurhors, .dater {
        font-size: 11px;
        color: #8e8f8f;
    }

    .right {
        text-align: right;
    }

    .dater {
        vertical-align: bottom;
        position: absolute;
        bottom: 0;
        right: 15px;
    }
</style>